<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Red Hat OpenShift 4, AWS, Windows, and a video</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/8MUH1ZxXhyk/" /><category term="OpenShift" /><category term="containers" /><category term="Red Hat OpenShift" /><author><name>Don Schenck</name></author><id>https://developers.redhat.com/blog/?p=593767</id><updated>2019-05-10T10:00:37Z</updated><published>2019-05-10T10:00:37Z</published><content type="html">&lt;p&gt;Let&amp;#8217;s get meta: This is a blog post about a video about a blog post. Is that kind of like calling someone to tell them you sent them an email? How can you use the Red Hat OpenShift installer (for OpenShift 4) with Windows when the installer only runs on Linux or MacOS? Keep reading to find out.&lt;/p&gt; &lt;p&gt;&lt;span id="more-593767"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In late April, I published a somewhat popular &lt;a href="https://developers.redhat.com/blog/2019/04/23/red-hat-openshift-4-0-developer-preview-on-aws-up-and-running-with-windows/"&gt;article about creating a Red Hat OpenShift 4 cluster on AWS using Windows&lt;/a&gt; as your desktop operating system, despite that fact that the OpenShift installer (&lt;code&gt;openshift-install&lt;/code&gt;) runs on Linux or macOS, but not Windows.&lt;/p&gt; &lt;p&gt;For those who learn better by visual input—&amp;#8221;visual learning&amp;#8221; is the phrase—I&amp;#8217;ve created a short video. It&amp;#8217;s about four minutes and touches on the key points. &lt;a href="https://developers.redhat.com/blog/2019/04/23/red-hat-openshift-4-0-developer-preview-on-aws-up-and-running-with-windows/"&gt;Click here to watch the video and read the previous article.&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s new?&lt;/h2&gt; &lt;p&gt;Some things to note:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The version of openshift-install is now 4.1.something.&lt;/li&gt; &lt;li&gt;openshift-install, previously, gave you specific login instructions when finished. Now it simply gives you the password. My video addresses that.&lt;/li&gt; &lt;li&gt;The meter is running on AWS. When you&amp;#8217;re finished with your cluster, you can easily wipe out everything with one command: &lt;code&gt;./openshift-install destroy cluster&lt;/code&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Containers? Windows? Me?&lt;/h2&gt; &lt;p&gt;Yes, by all means. If you&amp;#8217;re, say, a .NET developer and want to learn about, play with, or start using Linux container technology, don&amp;#8217;t count yourself out.&lt;/p&gt; &lt;p&gt;The move from .NET Framework to .NET Core is a small step—not a giant leap—and you can leverage your existing developer skills immediately. You do not need to learn a ton of Linux skills and commands and jargon; you can get started immediately.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s to the future and your success.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F10%2Fred-hat-openshift-4-aws-windows-and-a-video%2F&amp;#038;title=Red%20Hat%20OpenShift%204%2C%20AWS%2C%20Windows%2C%20and%20a%20video" data-a2a-url="https://developers.redhat.com/blog/2019/05/10/red-hat-openshift-4-aws-windows-and-a-video/" data-a2a-title="Red Hat OpenShift 4, AWS, Windows, and a video"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/10/red-hat-openshift-4-aws-windows-and-a-video/"&gt;Red Hat OpenShift 4, AWS, Windows, and a video&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/8MUH1ZxXhyk" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Let&amp;#8217;s get meta: This is a blog post about a video about a blog post. Is that kind of like calling someone to tell them you sent them an email? How can you use the Red Hat OpenShift installer (for OpenShift 4) with Windows when the installer only runs on Linux or MacOS? Keep reading [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/10/red-hat-openshift-4-aws-windows-and-a-video/"&gt;Red Hat OpenShift 4, AWS, Windows, and a video&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/10/red-hat-openshift-4-aws-windows-and-a-video/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">593767</post-id><dc:creator>Don Schenck</dc:creator><dc:date>2019-05-10T10:00:37Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/10/red-hat-openshift-4-aws-windows-and-a-video/</feedburner:origLink></entry><entry><title>Create your first Quarkus project with Eclipse IDE (Red Hat CodeReady Studio)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/FOgXYnhQbNs/" /><category term="Java" /><category term="Quarkus" /><category term="debugging" /><category term="Eclipse" /><category term="Eclipse Desktop" /><author><name>Jeff Maury</name></author><id>https://developers.redhat.com/blog/?p=592227</id><updated>2019-05-09T10:45:42Z</updated><published>2019-05-09T10:45:42Z</published><content type="html">&lt;p&gt;You&amp;#8217;ve probably heard about &lt;a href="https://quarkus.io"&gt;Quarkus&lt;/a&gt;, the Supersonic Subatomic Java framework tailored for Kubernetes and containers. In this article, I will show how easy is it to create and set up a Quarkus project in an Eclipse IDE based environment.&lt;span id="more-592227"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Please note that even if we use &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio&lt;/a&gt; in this article, any Eclipse IDE can be used assuming it has the tooling for Java-based development. So, you can also use the &lt;a href="https://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-java-developers"&gt;Eclipse IDE for Java Developers&lt;/a&gt; package or the &lt;a href="https://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-enterprise-java-developers"&gt;Eclipse IDE for Enterprise Java Developers&lt;/a&gt; package.&lt;/p&gt; &lt;h2&gt;Install IDE&lt;/h2&gt; &lt;p&gt;If you don&amp;#8217;t already have an IDE on your workstation, you must download and install one. You can use &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio&lt;/a&gt; or one of the Java packages from the &lt;a href="https://eclipse.org/downloads"&gt;Eclipse Foundation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once the IDE is installed, launch it and open a new workspace or reuse an existing workspace based on your preferences.&lt;/p&gt; &lt;h2&gt;Create your first Quarkus project&lt;/h2&gt; &lt;p&gt;Although it is possible from within the Eclipse-based IDE to create a Maven-based project using the new Maven project wizard, we will not use this path. It is based on the concept of Maven archetypes, and the Quarkus project does not provide a Maven archetype to bootstrap a new project but rather provides a Maven plugin to create a new project.&lt;/p&gt; &lt;p&gt;So, we will follow the &lt;a href="https://quarkus.io/guides/getting-started-guide"&gt;Quarkus Getting Started Guide&lt;/a&gt; recommendation on how to bootstrap a Quarkus project.&lt;/p&gt; &lt;p&gt;Using a terminal, go into a folder where you want your first Quarkus project to be stored and type the following command:&lt;/p&gt; &lt;pre&gt;mvn io.quarkus:quarkus-maven-plugin:create&lt;/pre&gt; &lt;p&gt;You will be asked for the &lt;em&gt;groupId&lt;/em&gt; for your project:&lt;/p&gt; &lt;pre&gt;Set the project groupId [org.acme.quarkus.sample]:&lt;/pre&gt; &lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt; &lt;p&gt;You will be asked for the &lt;em&gt;artifactId&lt;/em&gt; for your project:&lt;/p&gt; &lt;pre&gt;Set the project artifactId [my-quarkus-project]:&lt;/pre&gt; &lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt; &lt;p&gt;You will be asked for the &lt;em&gt;version&lt;/em&gt; for your project:&lt;/p&gt; &lt;pre&gt;Set the project version [1.0-SNAPSHOT]:&lt;/pre&gt; &lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt; &lt;p&gt;Then, you will be asked if you want to add a REST endpoint in your application.&lt;/p&gt; &lt;pre&gt;Do you want to create a REST resource? (y/n) [no]:&lt;/pre&gt; &lt;p&gt;Enter &lt;em&gt;yes&lt;/em&gt; and press the &lt;em&gt;ENTER&lt;/em&gt; key.&lt;/p&gt; &lt;p&gt;Then, you will be asked for the class name of the REST endpoint.&lt;/p&gt; &lt;pre&gt;Set the resource classname [org.acme.quarkus.sample.HelloResource]:&lt;/pre&gt; &lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt; &lt;p&gt;Then, you will be asked for the path of the REST endpoint.&lt;/p&gt; &lt;pre&gt;Set the resource path [/hello]:&lt;/pre&gt; &lt;p&gt;Press the &lt;em&gt;ENTER&lt;/em&gt; key to accept the default value.&lt;/p&gt; &lt;p&gt;At this point, your first Quarkus project has been created on your local workstation, let&amp;#8217;s import it into our IDE.&lt;/p&gt; &lt;h2&gt;Import the first Quarkus project into IDE&lt;/h2&gt; &lt;p&gt;From the IDE main window, open the &lt;em&gt;File -&amp;#62; Import -&amp;#62; Existing Maven Projects&lt;/em&gt; menu:&lt;/p&gt; &lt;p id="aQHfHsU"&gt;&lt;img class=" alignnone size-full wp-image-592717 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8104b27151.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8104b27151.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8104b27151.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8104b27151-297x300.png 297w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/p&gt; &lt;p&gt;Using the &lt;em&gt;Browse&lt;/em&gt; button, select the folder where your first Quarkus project has been generated:&lt;/p&gt; &lt;p id="PcbCBXZ"&gt;&lt;img class=" alignnone size-full wp-image-592727 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc810aa69b37.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc810aa69b37.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc810aa69b37.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc810aa69b37-297x300.png 297w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/p&gt; &lt;p&gt;Press the &lt;em&gt;Finish&lt;/em&gt; button, you should now see a new project in the &lt;em&gt;Project Explorer&lt;/em&gt; window (please note that it may take a while, as Maven will download some Quarkus dependencies if this is the first time you have built a Quarkus project on your workstation):&lt;/p&gt; &lt;p id="rTjyhnP"&gt;&lt;img class=" alignnone size-full wp-image-592737 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81304407bc-1024x545.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81304407bc.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81304407bc.png 1902w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81304407bc-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81304407bc-768x409.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81304407bc-1024x545.png 1024w" sizes="(max-width: 1902px) 100vw, 1902px" /&gt;&lt;/p&gt; &lt;h2&gt;Launch your first Quarkus application&lt;/h2&gt; &lt;p&gt;From the &lt;em&gt;Project Explorer&lt;/em&gt; window, select your Quarkus project (&lt;em&gt;my-quarkus-project&lt;/em&gt;), right-click the &lt;em&gt;Run As -&amp;#62; Maven build&amp;#8230;&lt;/em&gt; menu:&lt;/p&gt; &lt;p id="UdZFNqI"&gt;&lt;img class=" alignnone size-full wp-image-592747 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81d1d8b30e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81d1d8b30e.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81d1d8b30e.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc81d1d8b30e-296x300.png 296w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/p&gt; &lt;p&gt;In the Goals &lt;em&gt;field&lt;/em&gt;, enter &lt;code&gt;compile quarkus:dev&lt;/code&gt;:&lt;/p&gt; &lt;p id="MpaqHrL"&gt;&lt;img class=" alignnone size-full wp-image-592767 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8473a0359e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8473a0359e.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8473a0359e.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc8473a0359e-296x300.png 296w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/p&gt; &lt;p&gt;Press the &lt;em&gt;Run&lt;/em&gt; button. Your Quarkus application will start, and you should see the following output in the &lt;em&gt;Console&lt;/em&gt; window:&lt;/p&gt; &lt;p id="XbMcZVA"&gt;&lt;img class=" alignnone size-full wp-image-592777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc847e26dff3.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc847e26dff3.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc847e26dff3.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc847e26dff3-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/img_5cc847e26dff3-768x209.png 768w" sizes="(max-width: 1002px) 100vw, 1002px" /&gt;&lt;/p&gt; &lt;p&gt;At this point, your Quarkus application is started, and you should be able to access it from the following URL: &lt;a href="http://localhost:8080/hello"&gt;http://localhost:8080/hello&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Debug your first Quarkus application&lt;/h2&gt; &lt;p&gt;Although Quarkus has nice hot reload capabilities for developers, debugging is a key tool. Let&amp;#8217;s see how to set up debugging on our Quarkus application and then start a debugging session.&lt;/p&gt; &lt;p&gt;As you have probably noticed, we started the Quarkus application with the dev mode, which means that any changes in the application source code will be hot reloaded the next time your Quarkus application will process a request.&lt;/p&gt; &lt;p&gt;Another nice thing about the dev feature from Quarkus is that the Java virtual machine that is running the Quarkus application has been launched in debug mode. So, to debug our Quarkus application, we only need to connect a debugger.&lt;/p&gt; &lt;p&gt;If you&amp;#8217;re familiar with the Java development tools in Eclipse, you know that you can easily launch a Java debugger against a running JVM that has been started in debug mode, assuming you know the debug port the JVM is listening on.&lt;/p&gt; &lt;p&gt;If you looked at your Quarkus application output, you noticed the following message:&lt;/p&gt; &lt;p id="dapuJUN"&gt;&lt;img class=" alignnone size-full wp-image-593517 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0a0e4bc16.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0a0e4bc16.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0a0e4bc16.png 462w, https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0a0e4bc16-300x16.png 300w" sizes="(max-width: 462px) 100vw, 462px" /&gt;&lt;/p&gt; &lt;p&gt;This is the message generated by the JVM when running in debug mode, and it gives us the information that the port used is 5005.&lt;/p&gt; &lt;p&gt;Now you can create a remote Java debugger. Even better, because the message has been recognized by the Eclipse Java development tools, you just need to click on the list associated with the message and Eclipse will magically create a remote Java debugger and connect it to your Quarkus application!&lt;/p&gt; &lt;p&gt;After clicking on the hyperlink, you will see nothing because the remote Java debugger has been launched in the background and it connected to your Quarkus application. However, you can check it if you switch to the &lt;em&gt;Debug&lt;/em&gt; perspective. To do that, open the &lt;em&gt;Window -&amp;#62; Perspective -&amp;#62; Open Perspective -&amp;#62; Debug&lt;/em&gt; menu and select the &lt;em&gt;Debug&lt;/em&gt; view. You should see something similar to:&lt;/p&gt; &lt;p id="vuJNtvf"&gt;&lt;img class=" alignnone size-full wp-image-593527 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0be388909.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0be388909.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0be388909.png 475w, https://developers.redhat.com/blog/wp-content/uploads/2019/05/img_5ccb0be388909-300x182.png 300w" sizes="(max-width: 475px) 100vw, 475px" /&gt;&lt;/p&gt; &lt;p&gt;As you can see, the debugger is connected to the Quarkus application. That means you can add breakpoints in your application source code and, next time you send a request, the Quarkus JVM will stop and the Eclipse IDE will step to the code in which you set a breakpoint.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#38;linkname=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F09%2Fcreate-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio%2F&amp;#038;title=Create%20your%20first%20Quarkus%20project%20with%20Eclipse%20IDE%20%28Red%20Hat%20CodeReady%20Studio%29" data-a2a-url="https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/" data-a2a-title="Create your first Quarkus project with Eclipse IDE (Red Hat CodeReady Studio)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/"&gt;Create your first Quarkus project with Eclipse IDE (Red Hat CodeReady Studio)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/FOgXYnhQbNs" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;You&amp;#8217;ve probably heard about Quarkus, the Supersonic Subatomic Java framework tailored for Kubernetes and containers. In this article, I will show how easy is it to create and set up a Quarkus project in an Eclipse IDE based environment. Please note that even if we use Red Hat CodeReady Studio in this article, any Eclipse [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/"&gt;Create your first Quarkus project with Eclipse IDE (Red Hat CodeReady Studio)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">592227</post-id><dc:creator>Jeff Maury</dc:creator><dc:date>2019-05-09T10:45:42Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/</feedburner:origLink></entry><entry><title>Mechanic scheduling (part 1) - Can OptaPlanner keep up with a keynote audience of thousands?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9xgfSPpEhfY/RHSummit2019Part1.html" /><category term="feed_group_name_optaplanner" scheme="searchisko:content:tags" /><category term="feed_name_optaplanner" scheme="searchisko:content:tags" /><category term="insight" scheme="searchisko:content:tags" /><category term="maintenance scheduling" scheme="searchisko:content:tags" /><category term="useCase" scheme="searchisko:content:tags" /><category term="vehicle routing" scheme="searchisko:content:tags" /><author><name>ge0ffrey</name></author><id>searchisko:content:id:jbossorg_blog-mechanic_scheduling_part_1_can_optaplanner_keep_up_with_a_keynote_audience_of_thousands</id><updated>2019-05-11T08:22:32Z</updated><published>2019-05-09T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This year, my team and I participated in the Red Hat Summit keynote. In front of 7000 people, we demonstrated real-time scheduling, reacting on input coming from the audience’s smartphones. In the past 2 months, we created this application together with the other middleware teams and under the excellent guidance of Burr Sutter. It integrates various technologies such as Android/Iphone accelerometers, OpenShift/Kubernetes, Quarkus, KNative, TensorFlow, Kafka/Strimzi, Camel, Node.js, Godot, Infinispan, Drools and of course OptaPlanner.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We wrote a simulation of a typical manufacturing floor, involving machines at assembly lines. This led to an interesting conversation when I first showed it to my wife:&lt;/p&gt; &lt;/div&gt; &lt;div class="quoteblock"&gt; &lt;blockquote&gt; &lt;div class="paragraph"&gt; &lt;p&gt;"Look, darling. This is the keynote demo we’ve been working on the past few weeks."&lt;br&gt; "That looks like a video-game…​ Is that Mario and Luigi running around?"&lt;br&gt; "Well, notice how OptaPlanner optimizes their traveling time so they can spend more time fixing machines."&lt;br&gt; "Are you really going to show this to 7000 business people?"&lt;br&gt; "Yes, of course. It’s going to be beautiful."&lt;/br&gt; &lt;/br&gt; &lt;/br&gt; &lt;/br&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is how it turned out:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="RHSummit2019OptaPlanner2MechanicsDance.gif" alt="RHSummit2019OptaPlanner2MechanicsDance"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The machines (A-J) suffer attrition, which is detected by movements sensors. With the help of the audience, we simulate those sensors, by capturing accelerometer data from their phones. &lt;em&gt;When things go shaky, things go breaky.&lt;/em&gt; So as the audience shake their phone - or do more complex gestures - their machines receive damage. Each part of the audience is damaging one machine, and if the health of their machine drops to zero, it falls apart.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, those machines require maintenance before they break, which is where OptaPlanner comes in. There are only 2 or 3 mechanics to fix them. And while mechanics are traveling to a machine or fixing it, all machines continue to lose health. Deciding the order in which to fix them, as damage comes in concurrently, is difficult. Luckily, OptaPlanner schedules those mechanics for us. It reacts to health changes in real-time, as shown in this video:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt; &lt;iframe width="853" height="480" src="https://www.youtube.com/embed/IvO_bBgSsU4" frameborder="0" allowfullscreen="" /&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/p&gt; &lt;div class="sect1"&gt; &lt;h2 id="_the_planning_challenge"&gt;The planning challenge&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There is only one goal: &lt;em&gt;don’t let any machine reach 0%&lt;/em&gt;. This might seem like one simple constraint, but it’s actually two adversarial constraints:&lt;/p&gt; &lt;/div&gt; &lt;div class="olist arabic"&gt; &lt;ol class="arabic"&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fix the most damaged machine first&lt;/strong&gt;, because that has the highest risk of dying.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To fix machines as quickly as possible, &lt;strong&gt;take the shortest path&lt;/strong&gt;.&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The mechanics are either fixing machines or walking around, so by reducing their travel time, we increase their productivity.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If this was the only constraint, this would be a Traveling Salesman Problem (TSP).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;These 2 constraints are in competition with each other. They lead to different solutions:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="mechanicsFixTheWorstMachineFirst.png" alt="mechanicsFixTheWorstMachineFirst"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;What’s less obvious is how this impacts the &lt;em&gt;makespan&lt;/em&gt;, which is the amount of time the mechanics need to fix all the machines one time. A longer makespan reduces productivity:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="mechanicsFixTheWorstMachineFirstMakespan.png" alt="mechanicsFixTheWorstMachineFirstMakespan"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So we ended up having to weight these two constraints against each other. We implemented that by penalizing, per machine, the amount of attrition multiplied by the duration until the machine is fixed. So the more damage, or the longer it takes to fix a machine, the less likely that OptaPlanner’s solution will schedule that.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_it_s_just_a_vehicle_routing_problem"&gt;It’s just a Vehicle Routing Problem&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the academic Operations Research world, this problem is known as the Vehicle Routing Problem (VRP), in which we need to send a number vehicles (such as trucks) to a number of locations:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="mechanicSchedulingIsAVehicleRoutingProblem.png" alt="mechanicSchedulingIsAVehicleRoutingProblem"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It’s the same problem, with a few variations on the constraints.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, OptaPlanner is really good at optimizing vehicle routing problems at scale: &lt;strong&gt;it saves some of our customers hundreds of millions of dollars per year&lt;/strong&gt; by reducing their overall travel time by 15% or more. This also heavily reduces their fuel consumption, decreases their carbon footprint, which is great for the environment too!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://www.optaplanner.org/learn/useCases/vehicleRoutingProblem.html"&gt;Learn more about optimizing VRP’s with OptaPlanner&lt;/a&gt; or take a look at Jiri’s latest demo of the &lt;a href="https://github.com/kiegroup/optaweb-vehicle-routing"&gt;optaweb-vehicle-routing&lt;/a&gt; reference architecture:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt; &lt;iframe width="853" height="480" src="https://www.youtube.com/embed/ylPEIf7Mc2M" frameborder="0" allowfullscreen="" /&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_the_real_challenges"&gt;The real challenges&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Implementing this variation of vehicle routing was pretty straightforward at first, but we faced bigger challenges to get this interactive demonstration running well enough. After all, we couldn’t risk that it crashes during the keynote, in front of the audience (including all our bosses, all the way up to our CEO, Jim Whitehurst).&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;To learn more about &lt;strong&gt;our architecture and the integration with all those other technologies&lt;/strong&gt;, &lt;a href="https://www.optaplanner.org//blog/2019/05/09/RHSummit2019Part2.html"&gt;read Musa’s article (part 2)&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To learn more about the scaling challenges and &lt;strong&gt;the benchmarks on simulations and load tests we ran&lt;/strong&gt;, &lt;a href="https://www.optaplanner.org//blog/2019/05/09/RHSummit2019Part3.html"&gt;read Radovan’s article (part 3)&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;hr&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let me thank the entire team for their great work and specifically in this part, a big thanks to Luke Dary, Matthew Carleton, Evan Shortiss and Christopher Chase for building a beautiful dashboard UI and a great mobile application. And of course, a big thanks to our one and only captain, Burr Sutter, who can set up a show like no other!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;View the recording of our show:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt; &lt;iframe width="853" height="480" src="https://www.youtube.com/embed/FUu4kMc0PL8?start=5785" frameborder="0" allowfullscreen="" /&gt; &lt;/p&gt; &lt;/div&gt; &lt;/hr&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9xgfSPpEhfY" height="1" width="1" alt=""/&gt;</content><summary>This year, my team and I participated in the Red Hat Summit keynote. In front of 7000 people, we demonstrated real-time scheduling, reacting on input coming from the audience’s smartphones. In the past 2 months, we created this application together with the other middleware teams and under the excellent guidance of Burr Sutter. It integrates various technologies such as Android/Iphone acceleromete...</summary><dc:creator>ge0ffrey</dc:creator><dc:date>2019-05-09T00:00:00Z</dc:date><feedburner:origLink>https://www.optaplanner.org/blog/2019/05/09/RHSummit2019Part1.html</feedburner:origLink></entry><entry><title>Looking up a hash table library for caching in the 3scale Istio adapter</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/t_C_bJlLetM/" /><category term="Red Hat 3scale API Management" /><category term="Service Mesh" /><category term="istio" /><category term="service mesh" /><author><name>pgough</name></author><id>https://developers.redhat.com/blog/?p=592507</id><updated>2019-05-08T07:00:48Z</updated><published>2019-05-08T07:00:48Z</published><content type="html">&lt;p&gt;You have probably already heard about the service mesh concept and one of its leading implementations, &lt;a href="https://istio.io"&gt;Istio&lt;/a&gt;. In the 3scale engineering team at Red Hat, we are working on a component to extend the functionality of Istio (and Red Hat’s distribution, &lt;a href="https://maistra.io"&gt;Maistra&lt;/a&gt;) by integrating some &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/3scale"&gt;API Management&lt;/a&gt; features via the 3scale platform. In this article, I&amp;#8217;ll describe this work and some of the decisions made along the way.&lt;span id="more-592507"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/3scale/overview"&gt;3scale&lt;/a&gt; provides a range of authentication patterns, access control, and rate limiting features and analytics. The 3scale Istio adapter provides a way for new and existing 3cale users to quickly integrate services running in Istio with this functionality.&lt;/p&gt; &lt;p&gt;Istio provides a mechanism to build a custom back end, which gets called by the Mixer component to make decisions about, or act on, traffic flowing through the mesh. These custom back ends are known as “adapters” and take the form of a gRPC server, typically written in Go, leveraging the code generation utilities and integration testing framework provided by Istio.&lt;/p&gt; &lt;p&gt;End users create some custom resources within their Kubernetes or Red Hat OpenShift cluster, which informs Istio that requests to specific services should be managed and authorized by 3scale.&lt;/p&gt; &lt;p&gt;As traffic flows through the mesh, services marked for API management will have their requests forwarded to the 3scale Istio adapter, which in turn calls out to 3scale (SaaS or on-premises), to determine if the request should be accepted or rejected.&lt;/p&gt; &lt;h2&gt;Increasing performance&lt;/h2&gt; &lt;p&gt;As you can see, this introduces the risk for our adapter to become a bottleneck for traffic within the service mesh. We are adding an extra network hop between the adapter and 3scale, and potentially a relatively large amount of latency, depending on where 3scale is deployed.&lt;/p&gt; &lt;p&gt;To mitigate this, we decided that this would be a good use case for caching. Caching responses from 3scale authorization endpoints (authentication and rate-limit checking) would enable us to make authorization decisions within the adapter, reducing a network hop and associated latency.&lt;/p&gt; &lt;p&gt;A side effect of implementing this internal cache is that it benefits the 3scale platform itself by serving as a means to provide back pressure. Requests could be incremented and sent in batches at appropriate intervals, reducing network I/O and the load on 3scale.&lt;/p&gt; &lt;p&gt;As with any architectural decision in software, there are tradeoffs, of course. With the cache in place, we increase performance at the cost of potentially allowing some requests that may have gone over their rate limit boundaries through to the upstream service.&lt;/p&gt; &lt;p&gt;Having a large and sudden spike in requests at a given moment may cause this inconsistency to surface. However, this is not a typical use case and past experience has told us that customers are willing to take the hit here and are happy to accept the performance gain for these short-term inconsistencies.&lt;/p&gt; &lt;h2&gt;Implementation&lt;/h2&gt; &lt;p&gt;To achieve this vision, we needed some type of data structure that would be able to store data by keys, support concurrent access, and perform fast lookups. This is what a (concurrent) hash table—also known as a hash map, dictionary, or lookup table—is meant for.&lt;/p&gt; &lt;p&gt;As of Golang 1.9, the standard library introduced a concurrent safe map which can be used for this purpose. However, we also wanted to look at some third-party packages and evaluate if any of them might perform better, or expose additional API’s that might be beneficial to us when implementing this feature.&lt;/p&gt; &lt;h3&gt;Identifying candidates&lt;/h3&gt; &lt;p&gt;The criteria for selection prior to evaluation was as follows:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Open source with an acceptable license.&lt;/li&gt; &lt;li&gt;Support in-memory data storage.&lt;/li&gt; &lt;li&gt;Minimum dependencies—the package should have a low number, or ideally zero third-party dependencies, as each of these in itself could be seen as a form of technical debt.&lt;/li&gt; &lt;li&gt;In widespread use—the package should be reasonably well deployed. Such packages are more likely to have performance issues and vulnerabilities reported back to the project maintainers.&lt;/li&gt; &lt;li&gt;Well maintained—Any third-party package must be both stable and active.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Once we had selected a handful of potential candidates, we began to develop some benchmarks against our use case to measure and compare the performance of the various packages. This would ultimately be the deciding factor, with decisions potentially swayed for small performance inferiorities against useful features, as well as the latter two criteria identified previously.&lt;/p&gt; &lt;p&gt;A shortlist was decided via the GoDoc search feature, to reduce the selection pool to popular packages matching the above criteria, before doing due diligence on the public repositories code and community.&lt;/p&gt; &lt;p&gt;The following five packages were chosen for selection:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The built-in &lt;a href="https://golang.org/pkg/sync/#Map"&gt;sync.Map&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/orcaman/concurrent-map"&gt;concurrent-map&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/astaxie/beego/tree/develop/cache"&gt;beego cache&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/patrickmn/go-cache"&gt;go-cache&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/muesli/cache2go"&gt;cache2go&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Benchmarking&lt;/h2&gt; &lt;p&gt;The &lt;a href="https://golang.org/pkg/testing"&gt;golang testing package&lt;/a&gt; provides a benchmarking facility which makes writing benchmarks seem eerily familiar to anyone who has previously written unit tests with the language’s built-in constructs.&lt;/p&gt; &lt;p&gt;Creating a set of benchmarks with &lt;a href="https://github.com/golang/go/wiki/TableDrivenTests"&gt;table-driven tests&lt;/a&gt; plays nicely with what we are trying to achieve here, because it allows us to plug in an interface (the various caching implementations) and a set of workloads (simulate load on the cache).&lt;/p&gt; &lt;p&gt;In regard to simulating a real-world use case, we expect our cache to initially be hit with many writes, before becoming eventually stable, and from then on, receive mainly reads and updates, with few deletions and further additions. Therefore, this is the usage we will focus on.&lt;/p&gt; &lt;p&gt;Furthermore, just for clarity, we are not overly interested in how fast or optimized each package is. We just wanted to visualize how they stacked up against each other and gauge relative performance. For various benchmarks, we would pass a defined workload to each implementation and gather results on the time taken to complete this workload to the full extent. Each workload would consist of a large number of operations.&lt;/p&gt; &lt;p&gt;The benchmarks and graphs in the following sections were run on and produced on a macOS X machine running a 2.5 GHz i7 processor and 16GB of RAM. For validation, the same benchmarks were run on an m5a.xlarge instance in AWS.&lt;/p&gt; &lt;h3&gt;Benchmarking cache warmup&lt;/h3&gt; &lt;p&gt;To begin, we wanted to see how each implementation would behave during cache warmup (writes only) for varying amounts of clients. A data structure that performed well during warmup but poorly for the rest of its lifecycle would perhaps skew results favorable towards itself without warrant.&lt;/p&gt; &lt;p&gt;To start with, we simulated a cache warmup with 100,000 unique keys. Keys and content were of universal size and type. So, in this instance, the workload was 100,000 writes to the data structure fired off concurrently. The results for the time taken to complete this workload is measured in milliseconds.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-592547 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-100k-1024x776.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-100k-1024x776.png" alt="Cache warm up 100k" width="640" height="485" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-100k-1024x776.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-100k-300x227.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-100k-768x582.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;We can see that some data structures significantly outperform others for this workload. To visualize the impact of appending to the data structure and see how it scales, the same benchmarks were run against one million entries:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-592557 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-1-million-1024x558.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-1-million-1024x558.png" alt="Cache warm up 1 million keys" width="640" height="349" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-1-million-1024x558.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-1-million-300x164.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-warmup-1-million-768x419.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;The concurrent map from the standard library is starting to perform more poorly than other implementations. This is not a major surprise, because the documentation calls this out specifically:&lt;/p&gt; &lt;p&gt;&lt;i&gt;“The Map type is optimized for two common use cases: (1) when the entry for a given key is only ever written once but read many times, as in caches that only grow, or (2) when multiple goroutines read, write, and overwrite entries for disjoint sets of keys. In these two cases, use of a Map may significantly reduce lock contention compared to a Go map paired with a separate Mutex or RWMutex.”&lt;/i&gt;&lt;/p&gt; &lt;p&gt;This description happens to fit the use case we described earlier quite well, so this implementation should not be ruled out on the basis of these results.&lt;/p&gt; &lt;h3&gt;Benchmarking with workload&lt;/h3&gt; &lt;p&gt;The next set of benchmarks aimed to build on the previous one and simulate some real-life load on the data structure. Once the initial cache warmup was completed as before, with 100,000 keys, we would provide each implementation with an increasing amount of workload iterations (500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000).&lt;/p&gt; &lt;p&gt;For each iteration, we would kick off a total of 18 Go routines. Of these, 10 of these would be read-only, six would be responsible for editing the value of existing keys, and the final two would delete a key and value before adding it back to the cache again.&lt;/p&gt; &lt;p&gt;This work would be carried out concurrently. When all the work for that total iteration value was done, this was marked as a single operation and the time taken to complete that operation was measured.&lt;/p&gt; &lt;p&gt;In an attempt to get the most accurate results possible by mitigating the effect of noise and external factors on results, each implementation was run a total of 10 times for each iteration, and the average results across the 10 runs taken and plotted for each workload.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-592567 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-with-warmup-1024x567.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-with-warmup-1024x567.png" alt="Cache implementation with warmup" width="640" height="354" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-with-warmup-1024x567.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-with-warmup-300x166.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-with-warmup-768x426.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;From the graph, we can see that two of the implementations significantly out-performed the others. At this point, we began to discuss and weigh up the benefits of the features provided by the “go-cache” implementation, as opposed to going with the more raw, but performant “concurrent-map” implementation.&lt;/p&gt; &lt;p&gt;It was a matter of making an educated guess at this stage, because, for total accuracy, we would need to benchmark the final implementation, which we envisaged, wrapped around “concurrent-map” against “go-cache.” This was obviously impossible for something not built at this point.&lt;/p&gt; &lt;p&gt;Before we got into too much detailed discussion, we wanted to use the data we had collected up to now to visualize one additional scenario.&lt;/p&gt; &lt;h3&gt;Extrapolating steady-state performance&lt;/h3&gt; &lt;p&gt;We wanted to determine how an adapter, which was running reliably and had gained a large amount of uptime would perform with the various caches.&lt;/p&gt; &lt;p&gt;We had already determined how long it had taken to warm up the cache for each implementation, as well as how they appeared to compare over time with varying load. Finally, we wanted to compare how the caches stacked against each other after the initial warmup. We could obtain (roughly at least), this data by subtracting the averages gained in the first benchmark from the second. The results (log scale) were as follows:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-592577 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-no-warmup-1024x563.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-no-warmup-1024x563.png" alt="Cache implementation without warm up" width="640" height="352" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-no-warmup-1024x563.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-no-warmup-300x165.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/04/Cache-implementation-no-warmup-768x423.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;This graph shows us that in the long term, only one of the implementations will significantly outperform the others. With the warmup discounted, the other implementations tend to be tightly aligned.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In the end, we chose to go with the “concurrent-map” implementation and roll our own caching structure around this map. It outperformed the others consistently and in every area for the use case we provided.&lt;/p&gt; &lt;p&gt;The additional features this implementation provides are minimal, but this is likely all we will need, with some additional sugar provided by a wrapper. It is in widely used and has plenty of contributors, with a nice simple API.&lt;/p&gt; &lt;p&gt;We hope that, upon completion, we can then benchmark the finished module against the other implementations, to see if this decision was correct and to analyze and learn from the cost of rolling our own, both in terms of time spent and performance as opposed to using something off the shelf.&lt;/p&gt; &lt;h3&gt;Other points&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;The code for our gRPC adapter is fully open source and available on GitHub—see &lt;a href="https://github.com/3scale/3scale-istio-adapter/tree/benchmarks"&gt;3scale-istio-adapter&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The benchmarks have been pushed to the &lt;a href="https://github.com/3scale/3scale-istio-adapter/tree/benchmarks"&gt;benchmarks branch&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#38;linkname=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F08%2Flooking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter%2F&amp;#038;title=Looking%20up%20a%20hash%20table%20library%20for%20caching%20in%20the%203scale%20Istio%20adapter" data-a2a-url="https://developers.redhat.com/blog/2019/05/08/looking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter/" data-a2a-title="Looking up a hash table library for caching in the 3scale Istio adapter"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/08/looking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter/"&gt;Looking up a hash table library for caching in the 3scale Istio adapter&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/t_C_bJlLetM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;You have probably already heard about the service mesh concept and one of its leading implementations, Istio. In the 3scale engineering team at Red Hat, we are working on a component to extend the functionality of Istio (and Red Hat’s distribution, Maistra) by integrating some API Management features via the 3scale platform. In this article, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/08/looking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter/"&gt;Looking up a hash table library for caching in the 3scale Istio adapter&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/08/looking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">592507</post-id><dc:creator>pgough</dc:creator><dc:date>2019-05-08T07:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/08/looking-up-a-hash-table-library-for-caching-in-the-3scale-istio-adapter/</feedburner:origLink></entry><entry><title>Red Hat Enterprise Linux 8 developer cheat sheet</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/CdJnakGyR7I/" /><category term="Red Hat Enterprise Linux" /><category term="RHEL8" /><category term="RHEL" /><author><name>Mike Guerette</name></author><id>https://developers.redhat.com/blog/?p=589687</id><updated>2019-05-07T13:01:35Z</updated><published>2019-05-07T13:01:35Z</published><content type="html">&lt;p class="selectionShareable"&gt;With the release of &lt;a href="https://wp.me/p8e0as-2rYd"&gt;Red Hat Enterprise Linux 8&lt;/a&gt;, I’m pleased to introduce our new RHEL 8 cheat sheet for developers. This version has been updated from the beta version to reflect the final updates in RHEL 8. This document is intended for those of you who are:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Already familiar with Red Hat Enterprise Linux, but you want a quick reference for new RHEL 8 commands.&lt;/li&gt; &lt;li&gt;New to Red Hat Enterprise Linux and want to start exploring RHEL 8.&lt;/li&gt; &lt;/ol&gt; &lt;p class="selectionShareable"&gt;Here’s a sample of some of the common module commands you&amp;#8217;ll find in this cheat sheet. &lt;span id="more-566367"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-589687"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;List all modules:&lt;/li&gt; &lt;/ul&gt; &lt;pre class="notranslate"&gt; $ yum module list&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;List installed modules:&lt;/li&gt; &lt;/ul&gt; &lt;pre class="notranslate"&gt; $ yum module list installed&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;Find which module provides a package:&lt;/li&gt; &lt;/ul&gt; &lt;pre class="notranslate"&gt; $ yum module provides &lt;em&gt;package&lt;/em&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;Examine details of a module:&lt;/li&gt; &lt;/ul&gt; &lt;pre class="notranslate"&gt; $ yum module info &lt;em&gt;module&lt;/em&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;List packages installed by profiles of a module:&lt;/li&gt; &lt;/ul&gt; &lt;pre class="notranslate"&gt; $ yum module info --profile &lt;em&gt;module:stream&lt;/em&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;Display the current status of a module:&lt;/li&gt; &lt;/ul&gt; &lt;pre class="notranslate"&gt; $ yum module list &lt;em&gt;module&lt;/em&gt;&lt;/pre&gt; &lt;p class="selectionShareable"&gt;&lt;strong&gt;Download the &lt;a href="https://developers.redhat.com/cheat-sheets/red-hat-enterprise-linux-8/"&gt;Red Hat Enterprise Linux 8 Cheat Sheet&lt;/a&gt; today.&lt;/strong&gt;&lt;/p&gt; &lt;p class="selectionShareable"&gt;Red Hat Enterprise Linux 8 is available for application development by joining Red Hat Developers: &lt;a href="https://developers.redhat.com/rhel8"&gt;developers.redhat.com/rhel8&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-developer-cheat-sheet%2F&amp;#038;title=Red%20Hat%20Enterprise%20Linux%208%20developer%20cheat%20sheet" data-a2a-url="https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-developer-cheat-sheet/" data-a2a-title="Red Hat Enterprise Linux 8 developer cheat sheet"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-developer-cheat-sheet/"&gt;Red Hat Enterprise Linux 8 developer cheat sheet&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/CdJnakGyR7I" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;With the release of Red Hat Enterprise Linux 8, I’m pleased to introduce our new RHEL 8 cheat sheet for developers. This version has been updated from the beta version to reflect the final updates in RHEL 8. This document is intended for those of you who are: Already familiar with Red Hat Enterprise Linux, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-developer-cheat-sheet/"&gt;Red Hat Enterprise Linux 8 developer cheat sheet&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-developer-cheat-sheet/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">589687</post-id><dc:creator>Mike Guerette</dc:creator><dc:date>2019-05-07T13:01:35Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-developer-cheat-sheet/</feedburner:origLink></entry><entry><title>Red Hat Enterprise Linux 8 now generally available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/gYr8LIzEDWE/" /><category term="Announcement" /><category term="Feature" /><category term="Red Hat Enterprise Linux" /><category term="RHEL8" /><category term="buildah" /><category term="Podman" /><category term="python" /><category term="RHEL" /><author><name>Mike Guerette</name></author><id>https://developers.redhat.com/blog/?p=584177</id><updated>2019-05-07T13:01:21Z</updated><published>2019-05-07T13:01:21Z</published><content type="html">&lt;p class="selectionShareable"&gt;I think Red Hat Enterprise Linux 8 is the most developer-friendly Red Hat Enterprise Linux that we&amp;#8217;ve delivered, and I hope you agree. Let&amp;#8217;s get down to business, or rather coding, so you can see for yourself. You can read the &lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-enterprise-linux-8-every-enterprise-every-cloud-every-workload"&gt;Red Hat corporate press release&lt;/a&gt;.&lt;/p&gt; &lt;p class="selectionShareable"&gt;For this article, I&amp;#8217;ll quickly recap Red Hat Enterprise Linux 8 features (architecture, containers), introduce the very new and cool Red Hat Universal Base Image (UBI), and provide a handy list of developer resources to get you started on Red Hat Enterprise Linux 8.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;TL;DR &lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://developers.redhat.com/rhel8"&gt;Download RHEL 8 now&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://access.redhat.com/containers/#/search/ubi8"&gt;Download RHEL 8 image&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-584177"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Red Hat Enterprise Linux 8 architecture&lt;/h2&gt; &lt;p class="selectionShareable"&gt;To simplify your development experience, Red Hat Enterprise Linux 8 has three pre-enabled repositories:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;BaseOS&lt;/strong&gt; —“mostly” has operating system content&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Application Streams&lt;/strong&gt; (AppStream) — most developer tools will be here&lt;/li&gt; &lt;li&gt;&lt;strong&gt;CodeReady Builder&lt;/strong&gt; — &lt;span style="font-weight: 400;"&gt;additional libraries and developer tools&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p class="selectionShareable"&gt;Content in BaseOS is intended to provide the core set of the underlying operating system functionality that provides the foundation for all installations. This content is available in the traditional RPM format. For a list of BaseOS packages, see &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/8.0_beta_release_notes/#Packages-in-BaseOS"&gt;RHEL 8 Package Manifest&lt;/a&gt;.&lt;/p&gt; &lt;p class="selectionShareable"&gt;Application Streams, essentially the &lt;b&gt;&lt;span style="font-weight: 400;"&gt;next generation of Software Collections, &lt;/span&gt;&lt;/b&gt;are intended to provide additional functionality beyond what is available in BaseOS. This content set includes additional user space applications, runtime languages, databases, web servers, etc. that support a variety of workloads and use cases. The net for you is to simply use the component and version that you want. Once there&amp;#8217;s market demand, newer stable versions of components will be added.&lt;/p&gt; &lt;h2&gt;Linux containers&lt;/h2&gt; &lt;p class="selectionShareable"&gt;Linux containers are a critical component of cloud-native development and microservices, so Red Hat’s lightweight, open standards-based container toolkit is now fully supported and included with Red Hat Enterprise Linux 8. Built with enterprise IT security needs in mind, &lt;a href="https://www.redhat.com/en/blog/daemon-haunted-container-world-no-longer-introducing-buildah-10"&gt;Buildah&lt;/a&gt; (building containers), &lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;Podman&lt;/a&gt; (running containers), and &lt;a href="https://blog.openshift.com/promoting-container-images-between-registries-with-skopeo/"&gt;Skopeo&lt;/a&gt; (sharing/finding containers) help developers find, run, build and share containerized applications more quickly and efficiently—thanks to the distributed and, importantly, daemonless nature of the tools.&lt;/p&gt; &lt;h2&gt;Introducing Universal Base Image&lt;/h2&gt; &lt;p&gt;Derived from Red Hat Enterprise Linux, the Red Hat Universal Base Image (UBI) provides a freely redistributable, enterprise-grade base container image on which developers can build and deliver their applications. This means you can containerize your app in UBI, and deploy it anywhere. Of course, it will be more secure and Red Hat supported when deployed on Red Hat Enterprise Linux, but now you have options. There are separate UBI 7 and UBI 8 versions for Red Hat Enterprise Linux 7 and 8, respectively. Read more about them in the &lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image-0"&gt;Red Hat Universal Base Image introduction&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Red Hat Enterprise Linux 8 developer resources&lt;/h2&gt; &lt;p&gt;Over the past few months, we have produced a number of how-to documents specifically for Red Hat Enterprise Linux 8. Here&amp;#8217;s a list in case you missed them:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/"&gt;Intro to Application Streams&lt;/a&gt;—a primer about how Red Hat Enterprise Linux 8 has been re-architected with developers in mind&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/cheat-sheets/red-hat-enterprise-linux-8/"&gt;Red Hat Enterprise Linux 8 Cheat Sheet&lt;/a&gt;—your quick reference to new Red Hat Enterprise Linux 8 commands, and a list of the more common developer tools&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/"&gt;Introduction to Builder Repo&lt;/a&gt;—read what it is and why you&amp;#8217;ll find it handy&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/10/install-java-rhel8/"&gt;Installing Java 8 and 11&lt;/a&gt;—no more to say&lt;/li&gt; &lt;li&gt;&lt;a href="https://wp.me/p8e0as-2tQZ"&gt;Set up your LAMP stack—with Apache, MySQL, and PHP&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Building containers without daemons&lt;/a&gt;—intro to using Podman, Buildah, and more.&lt;/li&gt; &lt;li&gt;XDP &lt;a href="https://developers.redhat.com/blog/2018/12/06/achieving-high-performance-low-latency-networking-with-xdp-part-1/"&gt;part 1&lt;/a&gt; &amp;#38; &lt;a href="https://developers.redhat.com/blog/2018/12/17/using-xdp-maps-rhel8/"&gt;part 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/12/03/network-debugging-with-ebpf/"&gt;Network debugging with eBPF&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/rhel8/install-rhel8-vbox/"&gt;Quick install on VirtualBox&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/rhel8/install-rhel8/"&gt;Quick install on bare metal&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/14/python-in-rhel-8/"&gt;Python in RHEL 8&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/rhel8/hw/nodejs/"&gt;Quick install: Node.js&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wp.me/p8e0as-2tAd"&gt;What, no python in RHEL 8?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/rhel8/hw/python/"&gt;Quick install: Python&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/28/red-hat-enterprise-linux-8-image-builder-building-custom-system-images/"&gt;Image Builder: Building custom system images&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image-0"&gt;Introduction to Red Hat Universal Base Image (UBI)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Red Hat Developer Subscriptions&lt;/h2&gt; &lt;p&gt;Red Hat Developer members have been enjoying no-cost developer subscriptions for 3+ years now, and RHEL 8 is now automatically part of that. If your company wants developer support, there are several &lt;a href="https://www.redhat.com/en/store/linux-platforms"&gt;Red Hat Enterprise Linux Developer Subscriptions&lt;/a&gt; options with Red Hat support, too.&lt;/p&gt; &lt;h2&gt;RHEL 8 Documentation&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/performing_a_standard_rhel_installation/index"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/8.0_release_notes/index"&gt;Release Notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/package_manifest/index"&gt;Package Manifest&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class="link" href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/building_running_and_managing_containers/index"&gt;Building, running, and managing containers&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_managing_and_removing_user_space_components/index"&gt;Working with User space components and Application Streams &lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F07%2Fred-hat-enterprise-linux-8-now-generally-available%2F&amp;#038;title=Red%20Hat%20Enterprise%20Linux%208%20now%20generally%20available" data-a2a-url="https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-now-generally-available/" data-a2a-title="Red Hat Enterprise Linux 8 now generally available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-now-generally-available/"&gt;Red Hat Enterprise Linux 8 now generally available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/gYr8LIzEDWE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;I think Red Hat Enterprise Linux 8 is the most developer-friendly Red Hat Enterprise Linux that we&amp;#8217;ve delivered, and I hope you agree. Let&amp;#8217;s get down to business, or rather coding, so you can see for yourself. You can read the Red Hat corporate press release. For this article, I&amp;#8217;ll quickly recap Red Hat Enterprise [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-now-generally-available/"&gt;Red Hat Enterprise Linux 8 now generally available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-now-generally-available/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">584177</post-id><dc:creator>Mike Guerette</dc:creator><dc:date>2019-05-07T13:01:21Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-now-generally-available/</feedburner:origLink></entry><entry><title>Weekly Editorial - 7th May 2019</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BhtxLTiksxI/weekly-editorial-3rd-may-2019" /><category term="Camel" scheme="searchisko:content:tags" /><category term="camel-k" scheme="searchisko:content:tags" /><category term="CDI" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="Hibernate" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="jakarta ee" scheme="searchisko:content:tags" /><category term="JTA" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="narayana" scheme="searchisko:content:tags" /><category term="red hat summit" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="Weld" scheme="searchisko:content:tags" /><author><name>Paul Robinson</name></author><id>searchisko:content:id:jbossorg_blog-weekly_editorial_7th_may_2019</id><updated>2019-05-07T11:17:59Z</updated><published>2019-05-07T11:17:59Z</published><content type="html">&lt;!-- [DocumentBodyStart:a85a795a-7434-4c4f-8269-cf4380171eca] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;h2&gt;&lt;a href="https://jakarta.ee/images/jakarta/jakarta_ee_400x400.png"&gt;&lt;img alt="Image result for jakarta ee" class="jive-image" src="https://jakarta.ee/images/jakarta/jakarta_ee_400x400.png"/&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h2&gt;Update on Eclipse Jakarta EE Rights to Java Trademarks&lt;/h2&gt;&lt;p&gt;The big news this week was around an update to Jakarta EE's rights to use Java trademarks. You can read the announcement &lt;a class="jive-link-external-small" href="https://eclipse-foundation.blog/2019/05/03/jakarta-ee-java-trademarks/" rel="nofollow"&gt;here&lt;/a&gt; by Mike Milinkovich. Essentially, it's not been possible for Oracle and the Eclipse Foundation to come to an agreement on a seamless transition for beyond Jakarta EE 8. As a result the Jakarta EE community will not be able to modify the javax namespace. You can read Mark Little's views of this announcement &lt;a class="jive-link-blog-small" data-containerId="1427" data-containerType="37" data-objectId="6277" data-objectType="38" href="https://developer.jboss.org/blogs/mark.little/2019/05/03/jakarta-ee-and-the-future"&gt;here&lt;/a&gt;. Mark later followed up (&lt;a class="jive-link-external-small" href="http://markclittle.blogspot.com/2019/05/to-enterprise-java-and-beyond-personal.html" rel="nofollow"&gt;here&lt;/a&gt; and &lt;a class="jive-link-external-small" href="http://markclittle.blogspot.com/2019/05/evolving-jakarta-ee.html" rel="nofollow"&gt;here&lt;/a&gt;) with some of his personal views on the announcement and provided some insight on the paths he sees going forward.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Other News&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;Hands on Labs at Red Hat Summit&lt;/h3&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://www.redhat.com/en/summit/2019" rel="nofollow"&gt;Red Hat Summit&lt;/a&gt; is being held next week in Boston (May 7th - 9th). Eric Schabell will be hosting two hands on lab sessions. The first &lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/red_hat_summit_2019_road_to_red_hat_enterprise_linux_8_labs_roadmap" rel="nofollow"&gt;covers the new Red Hat Enterprise Linux 8&lt;/a&gt; and the second covers &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/04/red-hat-summit-2019-it-automation-management-labs-roadmap.html?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+schabell%2Fjboss+%28Eric+D.+Schabell+-+JBoss%29" rel="nofollow"&gt;IT automation and management&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;JTA and CDI integration&lt;/h3&gt;&lt;p&gt;The 5.9.5.Final release of Narayana comes with several CDI functionality enhancements. In &lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/jta_and_cdi_integration" rel="nofollow"&gt;this blogpost &lt;/a&gt;Ondra Chaloupka introduces these changes whilst focusing on the JTA and CDI integration.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;Keycloak Releases and Versioning&lt;/h3&gt;&lt;p&gt;We are aiming to achieve a continuous delivery model with Keycloak. By that we mean it should be seamless to upgrade between Keycloak releases and to keep up to date with the latest release. Read &lt;a class="jive-link-external-small" href="https://www.keycloak.org/2019/04/versioning.html" rel="nofollow"&gt;this blog post&lt;/a&gt; by Stian Thorgersen to learn about what will change.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h3&gt;What is Apache Camel K?&lt;/h3&gt;&lt;p&gt;It's "A lightweight integration platform born on Kubernetes, with serverless superpowers". Watch a &lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/what_is_apache_camel_k_awesome_30_minute_video" rel="nofollow"&gt;short video here&lt;/a&gt; to learn more.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/hibernate_search_6_0_0_alpha5_released" rel="nofollow"&gt;Hibernate Search 6.0.0.Alpha5&lt;/a&gt;. This release mainly restores the "indexNullAs" feature, adds a brand new API to declare dependencies in bridges, and adds compatibility with Elasticsearch 6.7 and 7.0.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://planet.jboss.org/post/hibernate_orm_5_3_10_final_released" rel="nofollow"&gt;Hibernate ORM 5.3.10.Final&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://www.keycloak.org/2019/04/keycloak-601-released.html" rel="nofollow"&gt;Keycloak 6.0.1&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:a85a795a-7434-4c4f-8269-cf4380171eca] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BhtxLTiksxI" height="1" width="1" alt=""/&gt;</content><summary>Update on Eclipse Jakarta EE Rights to Java Trademarks The big news this week was around an update to Jakarta EE's rights to use Java trademarks. You can read the announcement here by Mike Milinkovich. Essentially, it's not been possible for Oracle and the Eclipse Foundation to come to an agreement on a seamless transition for beyond Jakarta EE 8. As a result the Jakarta EE community will not be a...</summary><dc:creator>Paul Robinson</dc:creator><dc:date>2019-05-07T11:17:59Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/05/07/weekly-editorial-3rd-may-2019</feedburner:origLink></entry><entry><title>OpenShift workshops and breakout sessions at Red Hat Summit</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6X_wtgRE5O8/" /><category term="OpenShift" /><category term="Red Hat Summit" /><category term="red hat summit" /><author><name>David Millsaps</name></author><id>https://developers.redhat.com/blog/?p=593067</id><updated>2019-05-06T13:00:13Z</updated><published>2019-05-06T13:00:13Z</published><content type="html">&lt;p&gt;Red Hat OpenShift evangelists will be providing developers attending Red Hat summit a variety of interactive sessions to learn the latest Kubernetes and Red Hat OpenShift practices.  Come by the DevZone booth to connect with these evangelists between sessions.&lt;/p&gt; &lt;h2&gt;OpenShift Workshops&lt;/h2&gt; &lt;h3&gt;Build your own Kubernetes Operator&lt;/h3&gt; &lt;p&gt;Tuesday, May 7, 9:00 a.m.-11:00 a.m.&lt;br /&gt; Jorge Morales, Michael Hrivnak, Jan Kleinert, Josh Wood, Ryan Jarvinen&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Instructor-led lab&lt;/strong&gt;&lt;br /&gt; Codify your operational tactics and container-management best-practices using the Kubernetes Operator pattern. Operators feel like native features to Kubernetes end-users, because they extend the basic platform APIs by taking advantage of the included third-party resource and custom controller abstractions. This session provides architectural overviews, implementation patterns, and a look at a few popular solutions on this topic. Learn how to establish higher-order interfaces that represent the logical domain expertise (and perhaps the ideal product output) of a Kubernetes SRE. Bring a laptop to follow along as we build and distribute container-management tactics and strategies using the Operator Framework and Operator Lifecycle Manager.&lt;/p&gt; &lt;p&gt;Track: Cloud-native app dev&lt;br /&gt; Topics: Application delivery, Application platforms, Containers&lt;br /&gt; Audience: Build applications, Design application/system architectures&lt;br /&gt; Technical difficulty: Deep dive&lt;/p&gt; &lt;h3&gt;Developing applications on OpenShift as mere mortals&lt;/h3&gt; &lt;p&gt;Thursday, May 9, 10:45 a.m.-12:45 p.m.&lt;br /&gt; Jan Kleinert, Jorge Morales, Graham Dumpleton&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Instructor-led lab&lt;/strong&gt;&lt;br /&gt; Many developers face challenges and frustration when learning to develop applications on a platform that&amp;#8217;s new to them. We&amp;#8217;ve heard from developers that they want to be able to focus on what matters to them—writing code—rather than on learning the ins and outs of platforms like Kubernetes and OpenShift. If this sounds like you, then join us for this workshop, where you&amp;#8217;ll learn to use OpenShift Do (odo), a new CLI tool for developers who are writing, building, and deploying applications on OpenShift. Get hands-on experience with the way odo abstracts away Kubernetes and OpenShift concepts while supporting fast, iterative development.&lt;/p&gt; &lt;p&gt;Track: Cloud-native app dev&lt;br /&gt; Topics: Application development, Application platforms, Containers&lt;br /&gt; Products &amp;#38; services: Red Hat OpenShift Container Platform&lt;br /&gt; Technical difficulty: Deep dive&lt;/p&gt; &lt;h2&gt;OpenShift Breakout sessions&lt;/h2&gt; &lt;h3&gt;Put the dev back in DevOps: Cloud-native at local speed&lt;/h3&gt; &lt;p&gt;Tuesday, May 7, 3:45 p.m.-4:30 p.m.&lt;br /&gt; Jorge Morales, Red Hat; Jan Kleinert, Red Hat&lt;/p&gt; &lt;p&gt;The popularity of cloud-native applications, along with the pressure to build faster, has led to sweeping changes in the software engineering field—and to the rise of DevOps practices. However, deploying applications to the cloud has brought a host of concerns that slow down developers. This problem is highlighted during the write-deploy-test phase of the dev cycle, also known as the inner loop, when applications are deployed in an environment similar to production to test them in real-world conditions. Converting applications to a set of linked services, packaging them into containers, or instructing the target cluster to deploy the application (and its dependencies) are important considerations.&lt;/p&gt; &lt;p&gt;Moreover, Kubernetes, the defacto orchestrator on which cloud applications run, brings its own concepts that need to be understood, while not being essential to the core functionality of applications. This need increases the development effort just to get an app up and running, not to mention the slowness of the process itself, as containers are built and then deployed. What can be done to improve the day-to-day experience of developers targeting Kubernetes clusters? What can make this inner loop faster, and bring the focus back on code?&lt;/p&gt; &lt;p&gt;In this session, we&amp;#8217;ll look at the friction points that slow development early in a project, and then we&amp;#8217;ll see where things can be improved.&lt;/p&gt; &lt;p&gt;Track: Cloud-native app dev&lt;br /&gt; Topics: Application development, Containers&lt;br /&gt; Audience: Build applications, Contribute to community projects&lt;br /&gt; Session includes: Demo&lt;br /&gt; Products &amp;#38; services: Red Hat Application Runtimes, Red Hat JBoss Frameworks, Red Hat OpenShift Container Platform&lt;br /&gt; Technical difficulty: Introduction&lt;/p&gt; &lt;h3&gt;Introduction to Red Hat OpenShift Container Platform&lt;/h3&gt; &lt;p&gt;Day/Time: Thursday, May 9, 2:00 p.m.-2:45 p.m.&lt;br /&gt; Speaker(s): Grant Shipley, Red Hat&lt;br /&gt; Session type: Breakout&lt;/p&gt; &lt;p&gt;Everyone&amp;#8217;s heard about containers, and how they&amp;#8217;re going to solve all of our problems—or not.&lt;/p&gt; &lt;p&gt;In this session, we&amp;#8217;ll walk you through using containers and:&lt;br /&gt; •  Discuss why using a scheduler and orchestration system like Kubernetes is important.&lt;br /&gt; •  Dive into Red Hat OpenShift Container Platform to show how it makes both containers and Kubernetes accessible to everyone.&lt;br /&gt; •  After deploying several containers, we&amp;#8217;ll turn up the heat by showcasing scaling and moving on to deployment strategies including blue/green and rollbacks.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ll keep the slides to a minimum and instead focus on live demo, coding, and deployments. It&amp;#8217;ll be 95% hands-on demo using the latest version of OpenShift Container Platform and will be a great introduction to the platform if you haven&amp;#8217;t used it before or if you just want to understand what OpenShift is.&lt;/p&gt; &lt;p&gt;Track: Hybrid cloud infrastructure&lt;br /&gt; Topics: Containers, Hybrid cloud&lt;br /&gt; Audience: Build applications, Manage infrastructure, Make final decisions about IT purchases/vendors, Serve in an executive (VP or higher) role, Sell technology or services, Market technology or services, Have another enterprise technology role&lt;br /&gt; Products &amp;#38; services: Red Hat OpenShift Container Platform&lt;br /&gt; Technical difficulty: Introduction&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#38;linkname=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fopenshift-sessions-summit%2F&amp;#038;title=OpenShift%20workshops%20and%20breakout%20sessions%20at%20Red%20Hat%20Summit" data-a2a-url="https://developers.redhat.com/blog/2019/05/06/openshift-sessions-summit/" data-a2a-title="OpenShift workshops and breakout sessions at Red Hat Summit"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/06/openshift-sessions-summit/"&gt;OpenShift workshops and breakout sessions at Red Hat Summit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6X_wtgRE5O8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat OpenShift evangelists will be providing developers attending Red Hat summit a variety of interactive sessions to learn the latest Kubernetes and Red Hat OpenShift practices.  Come by the DevZone booth to connect with these evangelists between sessions. OpenShift Workshops Build your own Kubernetes Operator Tuesday, May 7, 9:00 a.m.-11:00 a.m. Jorge Morales, Michael [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/06/openshift-sessions-summit/"&gt;OpenShift workshops and breakout sessions at Red Hat Summit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/06/openshift-sessions-summit/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">593067</post-id><dc:creator>David Millsaps</dc:creator><dc:date>2019-05-06T13:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/06/openshift-sessions-summit/</feedburner:origLink></entry><entry><title>How C array sizes become part of the binary interface of a library</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/A3Q0WfLyj0I/" /><category term="C" /><category term="C++" /><category term="ABI" /><category term="c++" /><category term="ELF" /><author><name>Florian Weimer</name></author><id>https://developers.redhat.com/blog/?p=591297</id><updated>2019-05-06T07:00:41Z</updated><published>2019-05-06T07:00:41Z</published><content type="html">&lt;p&gt;Most C compilers allow accessing an array declared &lt;code&gt;extern&lt;/code&gt;, which has indeterminate bounds, like this:&lt;/p&gt; &lt;pre&gt;extern int external_array[]; int array_get (long int index) { return external_array[index]; } &lt;/pre&gt; &lt;p&gt;The definition of external_array could reside in a different translation unit and look like this:&lt;/p&gt; &lt;pre&gt;int external_array[3] = { 1, 2, 3 }; &lt;/pre&gt; &lt;p&gt;The question is what happens if this separate definition is changed to this:&lt;/p&gt; &lt;pre&gt;int external_array[4] = { 1, 2, 3, 4 }; &lt;/pre&gt; &lt;p&gt;Or this:&lt;/p&gt; &lt;pre&gt;int external_array[2] = { 1, 2 }; &lt;/pre&gt; &lt;p&gt;Does either change preserve the binary interface (assuming that there is a mechanism that allows the application to determine the size of the array at run time)?&lt;/p&gt; &lt;p&gt;Curiously, the answer is that on many architectures, &lt;em&gt;increasing the array size&lt;/em&gt; breaks binary interface (ABI) compatibility. Decreasing the array size may also cause compatibility problems. We&amp;#8217;ll look more closely at ABI compatibility in this article and explain how to avoid problems.&lt;span id="more-591297"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h1&gt;How the data section of an executable is linked&lt;/h1&gt; &lt;p&gt;To understand how the array size becomes part of the binary interface, we first need to examine how the data section of an executable is linked. The details are of course architecture-specific, and here we focus on the x86-64 architecture.&lt;/p&gt; &lt;p&gt;The x86-64 architecture supports addressing relative to the program counter, which means that access to a global array variable, as in the &lt;code&gt;array_get&lt;/code&gt; function shown previously, can be compiled to a single &lt;code&gt;movl&lt;/code&gt; instruction:&lt;/p&gt; &lt;pre&gt;array_get: movl external_array(,%rdi,4), %eax ret &lt;/pre&gt; &lt;p&gt;From that, the assembler produces an object file in which the instruction is marked with an &lt;code&gt;R_X86_64_32S&lt;/code&gt; relocation.&lt;/p&gt; &lt;pre&gt;0000000000000000 : 0: mov 0x0(,%rdi,4),%eax 3: R_X86_64_32S external_array 7: retq &lt;/pre&gt; &lt;p&gt;This relocation tells the link editor (&lt;code&gt;ld&lt;/code&gt;) to fill in the appropriate location of the &lt;code&gt;external_array&lt;/code&gt; variable at link time, when producing an executable.&lt;/p&gt; &lt;p&gt;This has two important consequences.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Because the variable offset is determined at link time, there is no run-time overhead for determining it. The only cost is the memory access itself.&lt;/li&gt; &lt;li&gt;To determine the offset, the sizes of all data variables need to be known. Otherwise, it would not be possible to compute the layout of the data section at link time.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For C implementations targeting the &lt;a href="http://www.sco.com/developers/gabi/latest/contents.html"&gt;Executable and Link Format (ELF)&lt;/a&gt;, as used on GNU/Linux, references to &lt;code&gt;extern&lt;/code&gt; variables do not carry object sizes. For the &lt;code&gt;array_get&lt;/code&gt; example, the size of the object is not even known to the compiler. In fact, the entire assembler file looks like this (only omitting unwind information using &lt;code&gt;-fno-asynchronous-unwind-tables&lt;/code&gt;, which is technically required for psABI compliance):&lt;/p&gt; &lt;pre&gt; .file "get.c" .text .p2align 4,,15 .globl array_get .type array_get, @function array_get: movl external_array(,%rdi,4), %eax ret .size array_get, .-array_get .ident "GCC: (GNU) 8.3.1 20190223 (Red Hat 8.3.1-2)" .section .note.GNU-stack,"",@progbits &lt;/pre&gt; &lt;p&gt;There is no size information for the &lt;code&gt;external_array&lt;/code&gt; at all in this assembler file: The only reference to the symbol is on the line with the &lt;code&gt;movl&lt;/code&gt; instruction, and the only numeric data in the instruction is the array element size (implied by &lt;code&gt;movl&lt;/code&gt; and the scaling factor 4).&lt;/p&gt; &lt;p&gt;If ELF required symbol sizes for undefined variables, it would not even be possible to compile the &lt;code&gt;array_get&lt;/code&gt; function.&lt;/p&gt; &lt;p&gt;How does the link editor obtain the actual symbol size? It looks at the symbol definition and uses the size information it finds there. This allows the link editor to compute the data section layout and fill out the data relocations with the appropriate offsets.&lt;/p&gt; &lt;h1&gt;Introducing ELF shared objects&lt;/h1&gt; &lt;p&gt;C implementations for ELF do not require the programmer to add source code markup to indicate if a function or variable is located in the current object (which can be a library or the main executable) or in a different object. The link editor and the dynamic loader are expected to take care of that transparently, without help for the programmer.&lt;/p&gt; &lt;p&gt;At the same time, for executables, there was a desire not to reduce performance by changing the compilation model for executables. This means that when compiling source code for a main program (i.e., without &lt;code&gt;-fPIC&lt;/code&gt;, and in this particular case, without &lt;code&gt;-fPIE&lt;/code&gt; as well), the &lt;code&gt;array_get&lt;/code&gt; function is compiled to the &lt;em&gt;exact same&lt;/em&gt; instruction sequence, before the introduction of dynamic shared objects. Furthermore, it does not matter whether the &lt;code&gt;external_array&lt;/code&gt; variable is defined in the main executable itself, or whether some shared object is loaded separately at run time. The instructions produced by the compiler are the same in both cases.&lt;/p&gt; &lt;p&gt;How is this possible? After all, ELF shared objects are position-independent. They are loaded at &lt;em&gt;unpredictable, randomized addresses&lt;/em&gt; at run time. Yet the compiler generates a machine code sequence that requires that these variables are placed at a &lt;em&gt;fixed offset computed at link time&lt;/em&gt;, long before the program even runs.&lt;/p&gt; &lt;p&gt;The answer is related to the fact that only one loaded object (the main executable) uses these fixed offsets. All other objects (the dynamic loader itself, the C run-time library, and any other library the program uses) are compiled and linked as fully position-independent (PIC) objects. For such objects, the compiler introduces an additional indirection, loading the actual address of each variable from the global offset table (GOT). We can see this indirection if we compile the &lt;code&gt;array_get&lt;/code&gt; example with &lt;code&gt;-fPIC&lt;/code&gt;, leading to this assembler code:&lt;/p&gt; &lt;pre&gt;array_get: movq external_array@GOTPCREL(%rip), %rax movl (%rax,%rdi,4), %eax ret &lt;/pre&gt; &lt;p&gt;As a result, the address of the &lt;code&gt;external_array&lt;/code&gt; variable is no longer hard-coded and can be changed at run time by initializing its GOT entry accordingly. This means that at run time, the definition of &lt;code&gt;external_array&lt;/code&gt; can be contained in the same shared object, a different shared object, or the main program. The dynamic loader will find the appropriate definition based on the ELF symbol lookup rules and bind the undefined symbol reference to its definition, by updating the GOT entry to its actual address.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s go back to the original example, where the &lt;code&gt;array_get&lt;/code&gt; function is located in the main program, so there is no indirection for the variable address. The key idea implemented in the link editor is that the main program will provide a definition of the &lt;code&gt;external_array&lt;/code&gt; variable &lt;em&gt;even if it is actually defined in a shared object at run time&lt;/em&gt;. At run time, instead of pointing all shared objects to the original definition of the variable in the shared object containing it, the dynamic loader will instead pick a &lt;em&gt;copy&lt;/em&gt; of the variable in the data section of the executable.&lt;/p&gt; &lt;p&gt;This has two important consequences. First of all, recall that the definition of &lt;code&gt;external_array&lt;/code&gt; looks like this:&lt;/p&gt; &lt;pre&gt;int external_array[3] = { 1, 2, 3 }; &lt;/pre&gt; &lt;p&gt;The definition has an initializer, and this initializer has to be applied to the definition in the main executable. To facilitate this, the main executable contains a &lt;em&gt;copy relocation&lt;/em&gt; for the symbol. The &lt;code&gt;readelf -rW&lt;/code&gt; command displays it as a &lt;code&gt;R_X86_64_COPY&lt;/code&gt; relocation:&lt;/p&gt; &lt;pre&gt;Relocation section '.rela.dyn' at offset 0x408 contains 3 entries: Offset Info Type Symbol's Value Symbol's Name + Addend 0000000000403ff0 0000000100000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0 0000000000403ff8 0000000200000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0 0000000000404020 0000000300000005 R_X86_64_COPY 0000000000404020 external_array + 0 &lt;/pre&gt; &lt;p&gt;Like other relocations, a copy relocation is processed by the dynamic loader. It involves a simple, bit-wise copy operation. The target of the copy is determined by the relocation offset (&lt;code&gt;0000000000404020&lt;/code&gt; in the example). The source is determined at run time, based on the symbol name (&lt;code&gt;external_array&lt;/code&gt;) and its resolution (its value). When making the copy, the dynamic loader will also look at the size of the symbol, to obtain the number of bytes that need to be copied. To make all this possible, &lt;code&gt;external_array&lt;/code&gt; symbol is automatically exported from the executable, as a defined symbol, so that it is visible at run time to the dynamic loader. The dynamic symbol table (&lt;code&gt;.dynsym&lt;/code&gt;) reflects this, as shown by the &lt;code&gt;readelf -sW&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;Symbol table '.dynsym' contains 4 entries: Num: Value Size Type Bind Vis Ndx Name 0: 0000000000000000 0 NOTYPE LOCAL DEFAULT UND 1: 0000000000000000 0 FUNC GLOBAL DEFAULT UND __libc_start_main@GLIBC_2.2.5 (2) 2: 0000000000000000 0 NOTYPE WEAK DEFAULT UND __gmon_start__ 3: 0000000000404020 12 OBJECT GLOBAL DEFAULT 22 external_array &lt;/pre&gt; &lt;p&gt;Where does the size information come from (12 bytes, in this example)? The link editor opens all shared objects on the link command line, searches for the definition, and uses its size information found there. As before, this allows the link editor to compute the layout of the data section, so that fixed offsets can be used. Also as before, the size of the definition in the main executable is fixed and cannot change at run time.&lt;/p&gt; &lt;p&gt;The dynamic linker also redirects symbol references in shared objects to the target of the copy relocation, in the main executable. This ensures that only a single copy of the variable exists in the entire program, as required by the C language semantics. Otherwise, if the variable is modified after initialization, updates from the main executable would not be visible to the dynamic shared objects, and vice versa.&lt;/p&gt; &lt;h1&gt;The impact on binary compatibility&lt;/h1&gt; &lt;p&gt;What happens if we change the definition of &lt;code&gt;external_array&lt;/code&gt; in the shared object, without relinking (or recompiling) the main program? First, let us consider the &lt;em&gt;addition&lt;/em&gt; of an array element.&lt;/p&gt; &lt;pre&gt;int external_array[&lt;strong&gt;4&lt;/strong&gt;] = { 1, 2, 3&lt;strong&gt;, 4&lt;/strong&gt; }; &lt;/pre&gt; &lt;p&gt;This triggers a warning at run time, from the dynamic loader:&lt;/p&gt; &lt;pre&gt;&lt;em&gt;main-program&lt;/em&gt;: Symbol `external_array' has different size in shared object, consider re-linking &lt;/pre&gt; &lt;p&gt;The main program still contains a definition of &lt;code&gt;external_array&lt;/code&gt;, which only provides space for 12 bytes. This means that the copy is incomplete: only the first three array elements are copied. Access to the array element &lt;code&gt;extern_array[3]&lt;/code&gt; is undefined as a result. This approach affects all code in the process, not just the main program, because all references to &lt;code&gt;extern_array&lt;/code&gt; have been redirected to the definition in the main program. This includes the shared object, which provides the definition of &lt;code&gt;extern_array&lt;/code&gt;, which is probably not prepared to deal with the situation that the array element in its own definition is gone.&lt;/p&gt; &lt;p&gt;What about the change in the opposite direction, removing an element, like this?&lt;/p&gt; &lt;pre&gt;int external_array[&lt;strong&gt;2&lt;/strong&gt;] = { 1, 2&lt;del&gt;, 3&lt;/del&gt; }; &lt;/pre&gt; &lt;p&gt;If the program avoids accessing the array element &lt;code&gt;extern_array[2]&lt;/code&gt; because it detects that the array length is only two by some mechanism, then this will work. There is a bit of unused memory after the array, but this will not break the program.&lt;/p&gt; &lt;p&gt;This means that we end up with the following rule:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Adding elements to a global array variable breaks binary compatibility.&lt;br /&gt; Removing elements may break compatibility, unless there is a mechanism&lt;br /&gt; that avoids access to the removed elements.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Unfortunately, the dynamic loader warning looks more harmless than it actually is, and for removed elements, there is no warning at all.&lt;/p&gt; &lt;h1&gt;How to avoid this situation&lt;/h1&gt; &lt;p&gt;Detecting the ABI change is rather easy with tools such as &lt;a href="https://sourceware.org/libabigail/"&gt;libabigail&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The easiest way to avoid this situation is to provide a function that returns the address of the array, using code like this:&lt;/p&gt; &lt;pre&gt;static int local_array[3] = { 1, 2, 3 }; int * get_external_array (void) { return local_array; } &lt;/pre&gt; &lt;p&gt;If the array definition cannot be made static because of the way it is used in the library, we can give it hidden visibility instead, also preventing its export and therefore avoid the truncation issue:&lt;/p&gt; &lt;pre&gt;int local_array[3] __attribute__ ((visibility ("hidden"))) = { 1, 2, 3 }; &lt;/pre&gt; &lt;p&gt;Things are considerably more complicated if the array variable needs to be exported for reasons of backward compatibility. Because the array is truncated underneath the library if an old main program with a shorter array definition is used, the accessor function will not provide access to the full array for newer client code if it is used with the same global array. Instead, the accessor function could use a separate (static or hidden) array, or perhaps a separate array for the newly added elements at the end. The downside is that it is impossible to keep everything in a contiguous array if the array variable is exported for backward compatibility. The design of the additional interface needs to reflect that.&lt;/p&gt; &lt;p&gt;With symbol versioning, it is possible to export multiple versions with different sizes, never changing the size associated with a specific version. Using this model, newly linked programs will always use the latest version, presumably with the largest size. Because symbol version and size are fixed by the link editor at the same time, they are always consistent. The GNU C Library uses this approach for the historic &lt;code&gt;sys_errlist&lt;/code&gt; and &lt;code&gt;sys_siglist&lt;/code&gt; variables. However, this still does not provide a single, contiguous array.&lt;/p&gt; &lt;p&gt;All things considered, an accessor function (e.g., the &lt;code&gt;get_external_array&lt;/code&gt; function above) is the best approach for avoiding this ABI compatibility problem.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#38;linkname=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F06%2Fhow-c-array-sizes-become-part-of-the-binary-interface-of-a-library%2F&amp;#038;title=How%20C%20array%20sizes%20become%20part%20of%20the%20binary%20interface%20of%20a%20library" data-a2a-url="https://developers.redhat.com/blog/2019/05/06/how-c-array-sizes-become-part-of-the-binary-interface-of-a-library/" data-a2a-title="How C array sizes become part of the binary interface of a library"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/06/how-c-array-sizes-become-part-of-the-binary-interface-of-a-library/"&gt;How C array sizes become part of the binary interface of a library&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/A3Q0WfLyj0I" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Most C compilers allow accessing an array declared extern, which has indeterminate bounds, like this: extern int external_array[]; int array_get (long int index) { return external_array[index]; } The definition of external_array could reside in a different translation unit and look like this: int external_array[3] = { 1, 2, 3 }; The question is what happens [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/06/how-c-array-sizes-become-part-of-the-binary-interface-of-a-library/"&gt;How C array sizes become part of the binary interface of a library&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/06/how-c-array-sizes-become-part-of-the-binary-interface-of-a-library/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">591297</post-id><dc:creator>Florian Weimer</dc:creator><dc:date>2019-05-06T07:00:41Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/06/how-c-array-sizes-become-part-of-the-binary-interface-of-a-library/</feedburner:origLink></entry><entry><title>Keycloak Community Newsletter #2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/j_ovJZLEe24/keycloak-newsletter-2.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Sébastien Blanc</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_community_newsletter_2</id><updated>2019-05-06T00:00:00Z</updated><published>2019-05-06T00:00:00Z</published><content type="html">&lt;p&gt; A lot of news to share in this second edition, so fasten your seatbelt and let's go ! &lt;/p&gt; &lt;h2&gt;News from the community&lt;/h2&gt; &lt;p&gt; First of all, we would like to thank the whole community that has contributed to this edition by sharing their links, tips, etc ... &lt;/p&gt; &lt;p&gt; More and more API Management/Gateway solutions can now be integrated with Keycloak. Recently, &lt;a href="https://www.getambassador.io/"&gt;Ambassador&lt;/a&gt;, a Open Source Kubernetes-Native API Gateway built on the Envoy Proxy has added &lt;a href="https://www.getambassador.io/reference/idp-support/keycloak/"&gt;support for Keycloak&lt;/a&gt;, it has also published a &lt;a href="https://www.getambassador.io/tutorials/github-sso/"&gt;quickstart&lt;/a&gt; to show how Keycloak can be used to add Github as Identity provider. &lt;/p&gt; &lt;p&gt; Good news for Python users, Akhil Lawrence has created a &lt;a href="https://github.com/akhilputhiry/keycloak-client/releases"&gt;Python Keycloak Adapter Client&lt;/a&gt;. Be sure to check out the really nice &lt;a href="https://keycloak-client.readthedocs.io/en/latest/"&gt;documentation&lt;/a&gt; that comes with a lot of usage examples. &lt;/p&gt; &lt;p&gt; Like any other project, setting up clustering can be somehow complex. Liqiang has shared with us his &lt;a href="https://github.com/fit2anything/keycloak-cluster-setup-and-configuration"&gt;setup and configuration tips&lt;/a&gt; , thanks again for sharing your knwoledge with the community ! &lt;/p&gt; &lt;P&gt; The existing &lt;a href="https://github.com/helm/charts/tree/master/stable/keycloak"&gt;Keycloak Helm Chart&lt;/a&gt; has now been deprecated and is now replaced by the &lt;a href="https://github.com/codecentric/helm-charts"&gt;one&lt;/a&gt; managed by CodeCentric. &lt;/p&gt; &lt;p&gt; Dmitry Telegin has created a really nice example on how you can dynamically brand your login them for Keycloak, check out the repository &lt;a href="https://github.com/dteleguin/keycloak-dynamic-branding"&gt;here&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; Hayri Cicek has written a nice introductory &lt;a href="https://kodnito.com/posts/microprofile-jwt-with-keycloak/"&gt;article&lt;/a&gt; on how to use Keycloak and MicroProfile. It even show the usage of the brand new Client Scope "microprofile-jwt" which has been added in Keycloak 6.0.0. &lt;/p&gt; &lt;h2&gt;News from the project&lt;/h2&gt; &lt;p&gt; Keycloak 6.0.1 has been &lt;a href="https://www.keycloak.org/2019/04/keycloak-601-released.html"&gt;released&lt;/a&gt;. We know that some people were a bit confused by our new versioning schema, hopefully, this &lt;a href="https://www.keycloak.org/2019/04/versioning.html"&gt;blog post&lt;/a&gt; will clear it up. &lt;/p&gt; &lt;p&gt; We started the proposal process for Keycloak to be accepted into the Cloud Native Computing Foundation (CNCF). This will hopefully significantly boost our community adoption with our ultimate goal of becoming the de facto solution for OAuth2/OpenID Connect within Open Source and Cloud Native. You can watch the presentation to the CNCF TOC (Technical Oversight Committee) &lt;a href="https://www.youtube.com/watch?v=cBrmcH9VFYE&amp;feature=youtu.be&amp;t=1032"&gt;here&lt;/a&gt; and the slides are also available &lt;a href="https://docs.google.com/presentation/d/1bijEpuwaaa6jR1D5PAjyW731-j6Xc1TFHJuUh_FwwK8/edit?ts=5ca774e9#slide=id.g5628e016b1_15_112"&gt;here&lt;/a&gt;. &lt;p&gt; As mentioned in the previous newsletter, larger feature will now be discussed in the open on Github. It's community focused and we have currently 2 open Pull Requests : &lt;ul&gt; &lt;li&gt; &lt;a href="https://github.com/keycloak/keycloak-community/pull/5"&gt;Managing multi-factor authentication and Step-up authentication&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="https://github.com/keycloak/keycloak-community/pull/6"&gt;Implementation of OAuth 2.0 Device Authorization Grant&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/p&gt; &lt;h2&gt;Conferences / Webinars&lt;/h2&gt; &lt;p&gt; W-Jax has just published on youtube a talk (in German) &lt;a href="https://t.co/GrBvLr6q5N?amp=1"&gt;Secure Spring Applications with Keycloak&lt;/a&gt; delivered by Thomas Darimont. &lt;p&gt; &lt;p&gt; In May, Sébastien Blanc will deliver a full-day workshop about Keycloak during &lt;a href="https://voxxeddays.com/minsk/"&gt;VoxxedDays Minsk&lt;/a&gt; &lt;/p&gt; &lt;h2&gt;Contributing to Keycloak&lt;/h2&gt; &lt;p&gt;We always welcome contributions to Keycloak. If you would like to contribute and have a great idea, tell us about it on the developer mailing list. If you are unsure about what to work on, let us know and we can help!&lt;/p&gt; &lt;p&gt;As a first time contributor, you may have a simpler idea to start, such as contributing a bug fix. This type of contribution will allow you to get to know the code base, the test suite, and the mechanics of creating a pull request. You can find a list of &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20Keycloak%20AND%20issuetype%20%3D%20bug%20AND%20fixVersion%20%3D%20%22Awaiting%20Volunteers%22%20"&gt;open bugs here&lt;/a&gt;&lt;/p&gt;. &lt;p&gt;We also have a list of &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20Keycloak%20AND%20fixVersion%20%3D%20%22Awaiting%20Volunteers%22%20"&gt;open issues&lt;/a&gt; that are awaiting contributions. Not all issues are properly reviewed, so we recommend that you start by sending an email to the developer mailing list before you begin.&lt;/p&gt; &lt;p&gt; For each newsletter, we will also highlight a few features for which we would especially like contributions. These features include: &lt;ul&gt; &lt;li&gt;&lt;a href="https://issues.jboss.org/browse/KEYCLOAK-953"&gt;Allow user to delete account&lt;/a&gt; - In light of GDPR and the right to be forgotten a very useful feature is to allow users to delete their own accounts.&lt;/li&gt; &lt;li&gt;&lt;a href="https://issues.jboss.org/browse/KEYCLOAK-2940"&gt;OpenID Connect Backchannel Logout&lt;/a&gt; - Add support for OpenID Connect Back-Channel logout specification to Keycloak.&lt;li&gt; &lt;/ul&gt; &lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/j_ovJZLEe24" height="1" width="1" alt=""/&gt;</content><summary>A lot of news to share in this second edition, so fasten your seatbelt and let's go ! News from the community First of all, we would like to thank the whole community that has contributed to this edition by sharing their links, tips, etc ... More and more API Management/Gateway solutions can now be integrated with Keycloak. Recently, Ambassador, a Open Source Kubernetes-Native API Gateway built on...</summary><dc:creator>Sébastien Blanc</dc:creator><dc:date>2019-05-06T00:00:00Z</dc:date><feedburner:origLink>https://www.keycloak.org/2019/05/keycloak-newsletter-2.html</feedburner:origLink></entry></feed>
